/*
 * Copyright (C) 2013 Boundary Devices
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */

/*
 * Some calculation examples:
 * a) 7nCK @1066M: (2/1066.6666Mhz) x 7 = 13125ps
 * b) 13.125ns @1066M: 13.125ns * 1.066GHz/2 = 6,995625nCK
 * c) 45ns @1066M: 45ns * 1.066GHz/2 = 23,985nCK
 *
 * note: DDR clock is 2 times lower than what is 'on the box'
 * in our case, we have 528M (not 533M, as one would expect)
 * which yields T=1893.9ps
 * our chip (is43tr16256al-15hbl) has the following timings for 1066MHz:
 * - tFAW = 45 clocks
 * - tRRD = 4 clocks, 7.5ns
 * - tRCD,tRP,tCL = 7,7,7
 * Which makes it consistent with most (all?) of the settings for
 * Kingston D2516EC4BXGGB below
 */

/*
 * Kingston D2516EC4BXGGB/(DDR3-1600)
 *  NOTE: tFAW and tRRD must change to use a part slower than 1333
 * 15 row + 3 bank + 10 col + 0 rank + 3 width = 31 = 2 GB
 * tRCD 13125 ps
 * tRP 13125 ps
 * tCL 13125 ps
 * 528M DDR clock = .528G = 1893.9ps/clocks
 * 13125ps / 1893.9ps/clocks = 6.93 clocks
 */

DATA 4, MX6_MMDC_P0_MDPDC, 0x00020036
DATA 4, MX6_MMDC_P0_MDSCR, 0x00008000
/*
 * tRFC:0x89		(260000/1893.9) = 137.283 = 138(0x8a) clocks
 * tXS:0x8e		(270000/1893.9) = 142.562 = 143(0x8f) clocks
 * tXP:b'011'		(6000/1893.9) = 3.168 = 4 clocks
 * tXPDLL:b'1100'	(24000/1893.9) = 12.672 = 13(0xd) clocks
 * tFAW:b'10111'	(45000/1893.9) = 23.760 = 24(0x18) clocks
 * tCL:b'0100'		(13125/1893.9) = 6.930 = 7 clocks
 */
DATA 4, MX6_MMDC_P0_MDCFG0, 0x898E7974
/*
 * tRCD:b'110'		(13125/1893.9) = 6.930 = 7 clocks
 * tRP:b'110'		(13125/1893.9) = 6.930 = 7 clocks
 * tRC:b'11010'		(50625/1893.9) = 26.731 = 27(0x1b) clocks
 * tRAS:b'10011'	(37500/1893.9) = 19.800 = 20(0x14) clocks
 * tRPA:b'1' 		(tRP[+1]) = 8 clocks
 * b'000'
 * tWR:b'111'		(15000/1893.9) = 7.920 = 8 clocks
 * tMRD:b'1011'		(min 4,12) = 12(0xc) clocks
 * b'00'
 * tCWL:b'100'		(tCL-1) = 6 clocks
 */
DATA 4, MX6_MMDC_P0_MDCFG1, 0xDB538F64
/*
 * b'0000000'
 * tDLLK:0x1ff(9 bits), 512(0x200) clocks (Jedec for DDR3)
 * b'0000000'
 * tRTP:b'011': 		(7500/1893.9) = 3.960 = 4 clocks
 * tWTR:same bank b'011'	(7500/1893.9) = 3.960 = 4 clocks
 * tRRD:b'011'			(7500/1893.9) = 3.960 = 4 clocks
 */
DATA 4, MX6_MMDC_P0_MDCFG2, 0x01FF00DB
/*
 * RTW_SAME: 2 cycles,
 * WTR_DIFF: 3 cycles,
 * WTW_DIFF: 3 cycles,
 * RTW_DIFF: 2 cycles,
 * RTR_DIFF: 2 cycles
 */
DATA 4, MX6_MMDC_P0_MDRWD, 0x0f9f26d2
/*
 * tXPR:0x8e		(270000/1893.9) = 142.563 = 143(0x8f) cycles
 * SDE_to_RST:0x10: 14 cycles, (Jedec)
 * RST_to_CKE:0x23: 33 cycles	(Jedec)
 */
DATA 4, MX6_MMDC_P0_MDOR, 0x008E1023
DATA 4, MX6_MMDC_P0_MDOTC, 0x09444040
DATA 4, MX6_MMDC_P0_MDPDC, 0x00025576
/* end of CS0 US 0x90000000-1  */
DATA 4, MX6_MMDC_P0_MDASP, 0x00000047
/* row:15 bits */
DATA 4, MX6_MMDC_P0_MDCTL, 0x841A0000	/* row 15 bits, CS1 not enabled */
DATA 4, MX6_MMDC_P0_MDSCR, 0x04088032	/* MR2, tCWL=6, RZQ/2 */
DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033	/* MR3 */
DATA 4, MX6_MMDC_P0_MDSCR, 0x00428031	/* MR1 Rtt=RZQ/2 OD=RZQ/7*/
/* A12 - 1 dll on(fast exit), CAS 7 */
DATA 4, MX6_MMDC_P0_MDSCR, 0x19308030	/* MR0 FastExit, tWR=8, Dll reset, tCL=7  */
DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040
/* force a calibration */
DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003
DATA 4, MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003
/* 8 refreshes at a time */
DATA 4, MX6_MMDC_P0_MDREF, 0x00007800
DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00022227
DATA 4, MX6_MMDC_P1_MPODTCTRL, 0x00022227

DATA 4, MX6_MMDC_P0_MPDGCTRL0, MX6_MMDC_P0_MPDGCTRL0_VAL
DATA 4, MX6_MMDC_P0_MPDGCTRL1, MX6_MMDC_P0_MPDGCTRL1_VAL
DATA 4, MX6_MMDC_P1_MPDGCTRL0, MX6_MMDC_P1_MPDGCTRL0_VAL
DATA 4, MX6_MMDC_P1_MPDGCTRL1, MX6_MMDC_P1_MPDGCTRL1_VAL
DATA 4, MX6_MMDC_P0_MPRDDLCTL, MX6_MMDC_P0_MPRDDLCTL_VAL
DATA 4, MX6_MMDC_P1_MPRDDLCTL, MX6_MMDC_P1_MPRDDLCTL_VAL
DATA 4, MX6_MMDC_P0_MPWRDLCTL, MX6_MMDC_P0_MPWRDLCTL_VAL
DATA 4, MX6_MMDC_P1_MPWRDLCTL, MX6_MMDC_P1_MPWRDLCTL_VAL
DATA 4, MX6_MMDC_P0_MPWLDECTRL0, MX6_MMDC_P0_MPWLDECTRL0_VAL
DATA 4, MX6_MMDC_P0_MPWLDECTRL1, MX6_MMDC_P0_MPWLDECTRL1_VAL
DATA 4, MX6_MMDC_P1_MPWLDECTRL0, MX6_MMDC_P1_MPWLDECTRL0_VAL
DATA 4, MX6_MMDC_P1_MPWLDECTRL1, MX6_MMDC_P1_MPWLDECTRL1_VAL

DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
DATA 4, MX6_MMDC_P1_MPMUR0, 0x00000800
DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
